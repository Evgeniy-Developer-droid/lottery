version: '3.9'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:8000
    container_name: web_python
    restart: always
    volumes:
      - .:/code
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    container_name: db_python
    environment:
      - POSTGRES_USER=user_dev
      - POSTGRES_PASSWORD=pass_dev
      - POSTGRES_DB=server_dev

  redis:
    image: redis:latest
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    container_name: redis_python
    ports:
      - 6379:6379

  celery-worker1:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery-worker1
    image: madefire/chordtest
    hostname: worker1
    env_file:
      - ./.env
    command: ['celery', '-A', 'Lotery.celery.app', 'worker', '-l', 'info']
    volumes:
      - .:/code
    links:
      - redis
    depends_on:
      - redis
      - web


  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery-beat
    image: madefire/chordtest
    hostname: beat
    env_file:
      - ./.env
    command: ['celery', '-A', 'Lotery.celery.app', 'beat', '-l', 'info']
    volumes:
      - .:/code
    links:
      - redis
    depends_on:
      - redis
      - web

volumes:
  postgres_data: